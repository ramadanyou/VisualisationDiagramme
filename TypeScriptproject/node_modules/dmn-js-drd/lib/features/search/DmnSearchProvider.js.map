{"version":3,"file":"DmnSearchProvider.js","names":["map","filter","sortBy","getLabel","DmnSearchProvider","elementRegistry","searchPad","canvas","_elementRegistry","_canvas","registerProvider","$inject","prototype","find","pattern","rootElement","getRootElement","elements","element","labelTarget","primaryTokens","matchAndSplit","secondaryTokens","id","hasMatched","tokens","matched","token","length","text","originalText","toLowerCase","i","indexOf","push","normal","substr"],"sources":["../../../src/features/search/DmnSearchProvider.js"],"sourcesContent":["import {\n  map,\n  filter,\n  sortBy\n} from 'min-dash';\n\nimport {\n  getLabel\n} from '../label-editing/LabelUtil';\n\n/**\n * @typedef {import('diagram-js/lib/core/Canvas').default} Canvas\n * @typedef {import('diagram-js/lib/core/ElementRegistry').default} ElementRegistry\n * @typedef {import('diagram-js/lib/features/search-pad/SearchPad').default} SearchPad\n *\n * @typedef {import('diagram-js/lib/features/search-pad/SearchPadProvider').default\n * } SearchPadProvider\n * @typedef {import('diagram-js/lib/features/search-pad/SearchPadProvider').SearchResult\n * } SearchResult\n */\n\n/**\n * Provides ability to search for DMN elements.\n *\n * @implements {SearchPadProvider}\n *\n * @param {ElementRegistry} elementRegistry\n * @param {SearchPad} searchPad\n * @param {Canvas} canvas\n */\nexport default function DmnSearchProvider(elementRegistry, searchPad, canvas) {\n  this._elementRegistry = elementRegistry;\n  this._canvas = canvas;\n\n  searchPad.registerProvider(this);\n}\n\nDmnSearchProvider.$inject = [\n  'elementRegistry',\n  'searchPad',\n  'canvas'\n];\n\n/**\n * @param {string} pattern\n *\n * @return {SearchResult[]}\n */\nDmnSearchProvider.prototype.find = function(pattern) {\n  const rootElement = this._canvas.getRootElement();\n\n  let elements = this._elementRegistry.filter(function(element) {\n    if (element.labelTarget) {\n      return false;\n    }\n    return true;\n  });\n\n  // do not include root element\n  elements = filter(elements, function(element) {\n    return element !== rootElement;\n  });\n\n  elements = map(elements, function(element) {\n    return {\n      primaryTokens: matchAndSplit(getLabel(element), pattern),\n      secondaryTokens: matchAndSplit(element.id, pattern),\n      element: element\n    };\n  });\n\n  // exclude non-matched elements\n  elements = filter(elements, function(element) {\n    return hasMatched(element.primaryTokens) || hasMatched(element.secondaryTokens);\n  });\n\n  elements = sortBy(elements, function(element) {\n    return getLabel(element.element) + element.element.id;\n  });\n\n  return elements;\n};\n\n/**\n * @param {Token[]} tokens\n *\n * @return {boolean}\n */\nfunction hasMatched(tokens) {\n  const matched = filter(tokens, function(token) {\n    return !!token.matched;\n  });\n\n  return matched.length > 0;\n}\n\n/**\n * @param {string} text\n * @param {string} pattern\n *\n * @return {Token[]}\n */\nfunction matchAndSplit(text, pattern) {\n  const tokens = [],\n        originalText = text;\n\n  if (!text) {\n    return tokens;\n  }\n\n  text = text.toLowerCase();\n  pattern = pattern.toLowerCase();\n\n  const i = text.indexOf(pattern);\n\n  if (i > -1) {\n    if (i !== 0) {\n      tokens.push({\n        normal: originalText.substr(0, i)\n      });\n    }\n\n    tokens.push({\n      matched: originalText.substr(i, pattern.length)\n    });\n\n    if (pattern.length + i < text.length) {\n      tokens.push({\n        normal: originalText.substr(pattern.length + i, text.length)\n      });\n    }\n  } else {\n    tokens.push({\n      normal: originalText\n    });\n  }\n\n  return tokens;\n}"],"mappings":"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"}