{"version":3,"file":"LiteralExpression.js","names":["Component","FeelEditor","LiteralExpression","constructor","props","context","event","stopPropagation","key","isAutocompleteOpen","node","triggeredFromAutocomplete","ctrlForNewline","isCmd","preventDefault","singleLine","includes","value","onInput","setState","editor","state","componentDidMount","container","onChange","handleChange","variables","addEventListener","handleMouseEvent","handleKeyDownCapture","handleKeyDown","autoFocus","focus","length","componentDidUpdate","prevProps","setValue","deepEqual","setVariables","componentWillUnmount","removeEventListener","render","className","join","onFocus","onBlur","setNode","metaKey","ctrlKey","querySelector","a","b","JSON","stringify"],"sources":["../../src/components/LiteralExpression.js"],"sourcesContent":["import { Component } from 'inferno';\n\nimport FeelEditor from '@bpmn-io/feel-editor';\n\n/**\n * A drop-in replacement for ContentEditable which uses FEEL editor under the hood.\n * It does not support placeholder.\n *\n * The callback `onInput(text)` receives text (including line breaks)\n * only. Updating the value via props will update the selection\n * if needed, too.\n *\n * @example\n *\n * class SomeComponent extends Component {\n *\n *   render() {\n *     return (\n *       <LiteralExpression\n *         className=\"some classes\"\n *         value={ this.state.text }\n *         onInput={ this.handleInput }\n *         onFocus={ ... }\n *         onBlur={ ... } />\n *     );\n *   }\n *\n * }\n *\n */\nexport default class LiteralExpression extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    /** @type {HTMLElement} */\n    this.node = null;\n    this.editor = null;\n\n    this.state = {\n      value: props.value\n    };\n  }\n\n  componentDidMount() {\n    this.editor = new FeelEditor({\n      container: this.node,\n      onChange: this.handleChange,\n      value: this.state.value,\n      variables: this.props.variables || [],\n    });\n\n    this.node.addEventListener('mousedown', this.handleMouseEvent);\n\n    // `capture: true` is needed to precede Keyboard handlers\n    this.node.addEventListener('keydown', this.handleKeyDownCapture, true);\n    this.node.addEventListener('keydown', this.handleKeyDown);\n\n    if (this.props.autoFocus) {\n      this.editor.focus(this.state.value.length);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { value } = this.props;\n\n    if (prevProps.value !== value && value !== this.state.value) {\n      this.setState({\n        value\n      }, () => {\n        this.editor.setValue(value);\n      });\n    }\n\n    if (!deepEqual(prevProps.variables, this.props.variables)) {\n      this.editor.setVariables(this.props.variables);\n    }\n  }\n\n  componentWillUnmount() {\n    this.node.removeEventListener('mousedown', this.handleMouseEvent);\n\n    // `capture: true` is needed to precede FEEL editor default handling\n    this.node.removeEventListener('keydown', this.handleKeyDownCapture, true);\n    this.node.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleMouseEvent = event => {\n    event.stopPropagation();\n  };\n\n  handleKeyDownCapture = event => {\n    if (event.key === 'Enter') {\n      if (isAutocompleteOpen(this.node)) {\n        event.triggeredFromAutocomplete = true;\n        return;\n      }\n\n      // supress non cmd+enter newline\n      if (this.props.ctrlForNewline && !isCmd(event)) {\n        event.preventDefault();\n      }\n\n      if (this.props.singleLine) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * @param {KeyboardEvent} event\n   */\n  handleKeyDown = event => {\n\n    // contain the event in the component to not trigger global handlers\n    if ([ 'Enter', 'Escape' ].includes(event.key) && event.triggeredFromAutocomplete) {\n      event.stopPropagation();\n    }\n  };\n\n  handleChange = (value) => {\n    const { onInput } = this.props;\n\n    this.setState({\n      value\n    });\n\n    if (onInput) {\n      onInput(value);\n    }\n  };\n\n  setNode = node => {\n    this.node = node;\n  };\n\n  render() {\n    return (\n      <div\n        className={ [ 'literal-expression', this.props.className || '' ].join(' ') }\n        ref={ this.setNode }\n        onClick={ this.handleMouseEvent }\n        onFocusIn={ this.props.onFocus }\n        onFocusOut={ this.props.onBlur }\n      />\n    );\n  }\n}\n\nfunction isCmd(event) {\n  return event.metaKey || event.ctrlKey;\n}\n\nfunction isAutocompleteOpen(node) {\n  return node.querySelector('.cm-tooltip-autocomplete');\n}\n\nfunction deepEqual(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n}\n"],"mappings":"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"}